<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zw.cf.dao.TicketMapper">
  <resultMap id="BaseResultMap" type="com.zw.cf.model.Ticket">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="dealers_id" jdbcType="VARCHAR" property="dealersId" />
    <result column="brand_id" jdbcType="VARCHAR" property="brandId" />
    <result column="odd" jdbcType="VARCHAR" property="odd" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creatTime" />
    <result column="over_time" jdbcType="TIMESTAMP" property="overTime" />
    <result column="process_ids" jdbcType="VARCHAR" property="processIds" />
    <result column="corporation_id" jdbcType="VARCHAR" property="corporationId" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, dealers_id, brand_id, odd, address, start_time, end_time, creat_time, over_time, 
    process_ids, corporation_id, state
  </sql>
  <select id="selectByExample" parameterType="com.zw.cf.model.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ticket
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zw.cf.model.TicketExample">
    delete from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zw.cf.model.Ticket">
    insert into ticket (id, name, dealers_id, 
      brand_id, odd, address, 
      start_time, end_time, creat_time, 
      over_time, process_ids, corporation_id, 
      state)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{dealersId,jdbcType=VARCHAR}, 
      #{brandId,jdbcType=VARCHAR}, #{odd,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{creatTime,jdbcType=TIMESTAMP}, 
      #{overTime,jdbcType=TIMESTAMP}, #{processIds,jdbcType=VARCHAR}, #{corporationId,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zw.cf.model.Ticket">
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="dealersId != null">
        dealers_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="odd != null">
        odd,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="creatTime != null">
        creat_time,
      </if>
      <if test="overTime != null">
        over_time,
      </if>
      <if test="processIds != null">
        process_ids,
      </if>
      <if test="corporationId != null">
        corporation_id,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dealersId != null">
        #{dealersId,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="odd != null">
        #{odd,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatTime != null">
        #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overTime != null">
        #{overTime,jdbcType=TIMESTAMP},
      </if>
      <if test="processIds != null">
        #{processIds,jdbcType=VARCHAR},
      </if>
      <if test="corporationId != null">
        #{corporationId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zw.cf.model.TicketExample" resultType="java.lang.Long">
    select count(*) from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ticket
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.dealersId != null">
        dealers_id = #{record.dealersId,jdbcType=VARCHAR},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=VARCHAR},
      </if>
      <if test="record.odd != null">
        odd = #{record.odd,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.creatTime != null">
        creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.overTime != null">
        over_time = #{record.overTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.processIds != null">
        process_ids = #{record.processIds,jdbcType=VARCHAR},
      </if>
      <if test="record.corporationId != null">
        corporation_id = #{record.corporationId,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      dealers_id = #{record.dealersId,jdbcType=VARCHAR},
      brand_id = #{record.brandId,jdbcType=VARCHAR},
      odd = #{record.odd,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      creat_time = #{record.creatTime,jdbcType=TIMESTAMP},
      over_time = #{record.overTime,jdbcType=TIMESTAMP},
      process_ids = #{record.processIds,jdbcType=VARCHAR},
      corporation_id = #{record.corporationId,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zw.cf.model.Ticket">
    update ticket
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dealersId != null">
        dealers_id = #{dealersId,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="odd != null">
        odd = #{odd,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatTime != null">
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overTime != null">
        over_time = #{overTime,jdbcType=TIMESTAMP},
      </if>
      <if test="processIds != null">
        process_ids = #{processIds,jdbcType=VARCHAR},
      </if>
      <if test="corporationId != null">
        corporation_id = #{corporationId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zw.cf.model.Ticket">
    update ticket
    set name = #{name,jdbcType=VARCHAR},
      dealers_id = #{dealersId,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=VARCHAR},
      odd = #{odd,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      creat_time = #{creatTime,jdbcType=TIMESTAMP},
      over_time = #{overTime,jdbcType=TIMESTAMP},
      process_ids = #{processIds,jdbcType=VARCHAR},
      corporation_id = #{corporationId,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>